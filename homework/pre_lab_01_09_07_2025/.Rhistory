knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
library(tidyverse)
2+2=
```{r}
2+2=
2+2
2+2
```{r}
```{r}
```{r}
```{r}
number <- 2
number * number
install.packages('tidyverse')
install.packages("tidyverse")
install.packages('rmarkdown')
install.packages("rmarkdown")
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
# This is a comment inside of a codeblock. Comments doesn't run when we run the codeblock.
# Adding this command is a good way to start your class reference notebook.
library(tidyverse)
library(readr)
library(dplyr)
library(tidyverse)
umd_courses <- read_rds("umd_courses.rds")
glimpse(umd_courses)
head(umd_courses)
umd_courses |>
group_by(term) |>
summarise(
count_classes = n()
)
umd_courses |>
group_by(term) |>
summarise(
count_classes = n()
) |>
arrange(desc(count_classes))
umd_courses |>
group_by(term, department) |>
summarise(
count_classes = n()
) |>
arrange(term, department)
umd_courses |>
group_by(term) |>
summarise(
count_classes = n(),
total_seats = sum(seats)
) |>
arrange(desc(total_seats))
umd_courses |>
group_by(term) |>
summarise(
count_classes = n(),
total_seats = sum(seats),
mean_seats = mean(seats),
median_seats = median(seats)
) |>
arrange(desc(total_seats))
umd_courses |>
group_by(department) |>
summarise(
count_classes = n(),
total_seats = sum(seats),
mean_seats = mean(seats),
median_seats = median(seats),
min_seats = min(seats),
max_seats = max(seats)
) |>
arrange(desc(total_seats))
umd_courses |>
arrange(desc(seats))
View(umd_courses)
glimpse(umd_courses)
head(umd_courses)
umd_courses |>
group_by(term) |>
summarise(
count_classes = n()
)
umd_courses |>
group_by(term) |>
summarise(
count_classes = n()
) |>
arrange(desc(count_classes))
umd_courses |>
group_by(term, department) |>
summarise(
count_classes = n()
) |>
arrange(term, department)
umd_courses |>
group_by(term) |>
summarise(
count_classes = n(),
total_seats = sum(seats)
) |>
arrange(desc(total_seats))
umd_courses |>
group_by(term) |>
summarise(
count_classes = n(),
total_seats = sum(seats),
mean_seats = mean(seats),
median_seats = median(seats)
) |>
arrange(desc(total_seats))
umd_courses |>
group_by(department) |>
summarise(
count_classes = n(),
total_seats = sum(seats),
mean_seats = mean(seats),
median_seats = median(seats),
# add minimum seats here
# add maximum seats here
) |>
arrange(desc(total_seats))
umd_courses |>
group_by(department) |>
summarise(
count_classes = n(),
total_seats = sum(seats),
mean_seats = mean(seats),
median_seats = median(seats),
# min()
# max()
) |>
arrange(desc(total_seats))
umd_courses |>
group_by(department) |>
summarise(
count_classes = n(),
total_seats = sum(seats),
mean_seats = mean(seats),
median_seats = median(seats),
min()
max()
umd_courses |>
group_by(department) |>
summarise(
count_classes = n(),
total_seats = sum(seats),
mean_seats = mean(seats),
median_seats = median(seats),
min_seats = min(seats)
max_seats = max(seats)
umd_courses |>
group_by(department) |>
summarise(
count_classes = n(),
total_seats = sum(seats),
mean_seats = mean(seats),
median_seats = median(seats),
min_seats = min(seats),
max_seats = max(seats)
) |>
arrange(desc(total_seats))
